//----------------------------------------------------------------------------
//
//   GT Menu Script - Creates a menu to call scripts from the GT Tools Package
//   @Guilherme Trevisan - TrevisanGMW@gmail.com - 2020-03-03
//   1.2 - 2020-03-13
//   Added new scripts
//
//   1.3 - 2020-06-07
//   Updated the names of many scripts
//   Added a new category called "Shapes", and added new scripts to it.
//
//   1.4 - 2020-06-17
//	 Added Mirror Cluster Tool
//   Updated help dialog
//   Added icons
//
//   1.4.1 - 2020-06-24
//	 Added Render Farm Checklist
//
//   1.4.2 - 2020-06-26
//	 Added Renamer
//
//   1.4.3 - 2020-07-17
//	 Added Maya to Discord
//
//   1.4.4 ~ 1.4.5 - 2020-07-25
//	 Updated Render Farm Checklist
//   Added new category
//
//   1.4.6 - 2020-09-13
//	 Added GT Utilities
//
//   1.4.7 - 2020-10-17
//	 Minor fixes for the renamer script
//   Added new utilities to GT Utilities
//
//   1.4.8 - 2020-10-21
//   Added Uniform LRA Toggle
//   Organized GT Utilities
//----------------------------------------------------------------------------

// Globals 
global string $scriptVersion = "1.4.8";
global string $gMainWindow;     // already defined by Maya

// Set optionVar to the current version
optionVar -sv "gt_tools_version" $scriptVersion;
        
// Removes existing menu in case it exists
if (`menu -q -exists gtToolsMenu`)
    {
    menu -e -dai gtToolsMenu;
    }
else
    {
	setParent $gMainWindow ;
    menu -l "GT Tools" -p MayaWindow -to true gtToolsMenu ;
    }

setParent -menu gtToolsMenu ;

// -----------------------------------------TOOLS------------------------------------
menuItem -l "Tools" -sm true -to true ;
	menuItem 
    -l ("Renamer") 
    -c ("python(\"import gt_renamer\\ngt_renamer.build_gui_renamer()\");") 
    -ann ("Script for renaming multiple objects.") 
    -image "renamePreset.png" ;

    menuItem 
    -l ("Selection Manager") 
    -c ("python(\"import gt_tool_selection_manager\\ngt_tool_selection_manager.build_gui_selection_manager()\");") 
    -ann ("Manages or creates custom selections.") 
    -image "selectByHierarchy.png" ;
    
    menuItem 
    -l ("Replace Reference Paths") 
    -c ("python(\"import gt_tool_replace_reference_paths\\ngt_tool_replace_reference_paths.build_gui_replace_reference_paths()\");") 
    -ann ("Search and Replace for reference paths.") 
    -image "reference.png" ;
	
	menuItem 
    -l ("Transfer Transforms") 
    -c ("python(\"import gt_tool_transfer_transforms\\ngt_tool_transfer_transforms.build_gui_transfer_transforms()\");") 
    -ann ("Script for quickly transfering Translate, Rotate, and Scale between objects.") 
    -image "transform.svg" ;
	
	menuItem 
    -l ("Render Checklist") 
    -c ("python(\"import gt_render_checklist\\ngt_render_checklist.build_gui_gt_render_checklist()\");") 
    -ann ("Performs a series of checks to detect common issues that are often accidently ignored/unnoticed.") 
    -image "checkboxOn.png" ;
	
    
    setParent -menu ".." ;
	
	
// -----------------------------------------CURVES------------------------------------
menuItem -l "Curves" -sm true -to true ;
    menuItem 
    -l ("Generate Python Curve") 
    -c ("python(\"import gt_generate_python_curve\\ngt_generate_python_curve.build_gui_py_curve()\");") 
    -ann ("Generates the python code necessary to create a selected curve.") 
    -image "pythonFamily.png" ;
	
	menuItem 
    -l ("Generate Text Curve") 
    -c ("python(\"import gt_generate_text_curve\\ngt_generate_text_curve.build_gui_generate_text_curve()\");") 
    -ann ("Generates a single curve containing all shapes necessary to produce a word/text.") 
    -image "text.png" ;


    setParent -menu ".." ;

// -----------------------------------------RIGGING------------------------------------
menuItem -l "Rigging" -sm true -to true ;
    menuItem 
    -l ("Connect Attributes") 
    -c ("python(\"import gt_connect_attributes\\ngt_connect_attributes.build_gui_connect_attributes()\");") 
    -ann ("Automated solution for connecting multiple attributes.") 
    -image "hsRearrange.png";
	
    menuItem 
    -l ("Mirror Cluster Tool") 
    -c ("python(\"import gt_mirror_cluster_tool\\ngt_mirror_cluster_tool.build_gui_mirror_cluster_tool()\");") 
    -ann ("Automated solution for mirroring clusters.") 
    -image "cluster.png";
    
    
    menuItem 
    -l ("Generate In-Between") 
    -c ("python(\"import gt_generate_inbetween\\ngt_generate_inbetween.build_gui_generate_inbetween()\");") 
    -ann ("Generates inbetween transforms that can be used as layers for rigging/animation.") 
    -image "hsGraphMaterial.png" ;
	
    menuItem 
    -l ("Create Auto FK") 
    -c ("python(\"import gt_create_ctrl_auto_fk\\ngt_create_ctrl_auto_fk.build_gui_auto_fk()\");") 
    -ann ("Automated solution for created an FK control curve.") 
    -image "kinInsert.png" ;
	
    menuItem 
    -l ("Create IK Leg") 
    -c ("python(\"import gt_create_ctrl_simple_IK_leg\\ngt_create_ctrl_simple_IK_leg.build_gui_simple_ik_leg()\");") 
    -ann ("Automated solution for create a simple IK leg.") 
    -image "kinHandle.png" ;
	
	menuItem 
    -l ("Make Stretchy Leg") 
    -c ("python(\"import gt_make_stretchy_leg\\ngt_make_stretchy_leg.build_gui_make_stretchy_legs()\");") 
    -ann ("Automated solution for creating a simple stretchy system for an IK leg.") 
    -image "ikSCsolver.svg" ;
    
    setParent -menu ".." ;


    
// -----------------------------------------UTILITIES------------------------------------

menuItem -l "Utilities" -sm true -to true ;
    
    menuItem 
    -l ("Reload File")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_reload_file()\");") 
    -ann ("Reopens the opened file (to revert back any changes done to the file since it was first opened)") 
    -image "openLoadGeneric.png";
    //menuItem -optionBox true
    //-c ("print 1") ;
    
    menuItem 
    -l ("Resource Browser")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_open_resource_browser()\");") 
    -ann ("Opens Maya's Resource Browser. A good way to find icons or elements you may want to use.") 
    -image "bsd-head.png";
    
    menuItem 
    -l ("Import References")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_import_references()\");") 
    -ann ("Imports all references.") 
    -image "reference.svg";
    
    menuItem 
    -l ("Uniform LRA Toggle")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_uniform_lra_toggle()\");") 
    -ann ("Makes the visibility of the Local Rotation Axis uniform among the selected objects according to the current state of the majority of them.") 
    -image "visible.png";
	
    // Material
    menuItem -divider true ;
	
    menuItem 
    -l ("Copy Material")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_copy_material()\");") 
    -ann ("Copies material to clipboard.") 
    -image "polyBakeSetAssign.png";
    
    menuItem 
    -l ("Paste Material")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_paste_material()\");") 
    -ann ("Pastes material from clipboard.") 
    -image "polyBakeSetEdit.png";

    // Pivot
    menuItem -divider true ;
    
    menuItem 
    -l ("Move Pivot to Top")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_move_pivot_to_top()\");") 
    -ann ("Moves pivot point to the top of the boundingbox of every selected object.") 
    -image "moveLayerUp.png";
    
    menuItem 
    -l ("Move Pivot to Base")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_move_pivot_to_base()\");") 
    -ann ("Moves pivot point to the base of the boundingbox of every selected object.") 
    -image "moveLayerDown.png";
    
    menuItem 
    -l ("Move Object to Origin")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_move_to_origin()\");") 
    -ann ("Moves selected objects to origin according to their pivot point.") 
    -image "grid.svg";

    // Reset Section
    menuItem -divider true ;

    menuItem 
    -l ("Reset Transforms")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_reset_transforms()\");") 
    -ann ("Reset transforms. It checks for incomming connections, then set the attribute to 0 if there are none. Currently affects Joints, meshes and transforms. (Only Rotation)") 
    -image "CenterPivot.png";
    
    menuItem 
    -l ("Reset Joints Display")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_reset_joint_sizes()\");") 
    -ann ("Resets the radius attribute back to one in all joints, then changes the global multiplier (jointDisplayScale) back to one.") 
    -image "kinJoint.png";
    
    menuItem 
    -l ("Reset \"persp\" Camera")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_reset_persp_shape_attributes()\");") 
    -ann ("If persp camera exists (default camera), reset its attributes.") 
    -image "camera.svg";


    // Delete Section
    menuItem -divider true ;
    
    menuItem 
    -l ("Delete Namespaces")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_delete_namespaces()\");") 
    -ann ("Deletes all namespaces in the scene.") 
    //-image "rename.png";
    -image "renamePreset.png";
    //-image "namespaceEditor.png";
    
    menuItem 
    -l ("Delete Display Layers")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_delete_display_layers()\");") 
    -ann ("Deletes all display layers.") 
    -image "displayLayer.svg";

    menuItem 
    -l ("Delete Keyframes")
    -c ("python(\"import gt_utilities\\ngt_utilities.gtu_delete_keyframes()\");") 
    -ann ("Deletes all nodes of the type \"animCurveTA\" (keyframes).") 
    -image "keyIntoclip.png";

    setParent -menu ".." ;


// -----------------------------------------MISCELLANEOUS------------------------------------

menuItem -l "Miscellaneous" -sm true -to true ;
    
    // If icon exists, use it
    string $mayaToDiscordIcon = `internalVar -userBitmapsDir` + "gt_maya_to_discord_icon.png";
    if (!`filetest -r $mayaToDiscordIcon`) 
    { 
        $mayaToDiscordIcon = "camera.open.svg" ;
    } 

    menuItem 
    -l ("Maya to Discord") 
    -c ("python(\"import gt_maya_to_discord\\ngt_maya_to_discord.build_gui_maya_to_discord()\");") 
    -ann ("Send images and videos (playblasts) from Maya to Discord using a Discord Webhook to bridge the two programs.") 
    -image $mayaToDiscordIcon ;
    
    setParent -menu ".." ;
    



// -----------------------------------------ABOUT------------------------------------

    menuItem -divider true ;
    menuItem -l "Help" -sm true -to true ;
    
    //menuItem -l "About"  -c ("source \"gt_tools_menu.mel\"; aboutMenuDialog($scriptVersion);") -ann ("Opens about menu.") -image "help.png" ;;
    menuItem -l "About"  -c ("python(\"import gt_utilities\\ngt_utilities.gtu_build_gui_about_gt_tools()\");") -ann ("Opens about menu.") -image "help.png" ;;
    menuItem -l "Re-Build Menu" -c ("rehash; source \"gt_tools_menu.mel\" ;") -ann ("Re-Creates this menu, and does a rehash to pick up any new scripts.") -image "refresh.png" ;
    menuItem -l "Check for Updates" -c ("showHelp -a \"https://github.com/TrevisanGMW/maya-scripts/tree/master/gt_tools/\"; ") -ann ("Check for Update.") -image "RS_import_layer.png" ;
    menuItem -l ("Installed Version: "   +  $scriptVersion) -en false -itl true -image "SP_FileDialogToParent_Disabled.png";
